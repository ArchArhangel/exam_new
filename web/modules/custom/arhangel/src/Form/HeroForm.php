<?php

namespace Drupal\arhangel\Form;

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;

/**
 * Our custom hero form.
 * Class HeroForm
 */

class HeroForm extends FormBase {

  /**
   * {@inheritDoc}
   * @return string
   */
  public function getFormId() {
    return "arhangel_heroform";
    // TODO: Implement getFormId() method.
  }

  /**
   * {@inheritDoc}
   * @param array $form
   * @param \Drupal\Core\Form\FormStateInterface $form_state
   *
   * @return array
   */
  public function buildForm(array $form, FormStateInterface $form_state) {

    $form['rival_1'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Rival one'),
    ];

    $form['rival_2'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Rival two'),
    ];

    $form['submit'] = [
      '#type' => 'submit',
      '#value' => $this->t('Who will win?'),
    ];

    return $form;
    // TODO: Implement buildForm() method.
  }

  /**
   * {@inheritDoc}
   * @param array $form
   * @param \Drupal\Core\Form\FormStateInterface $form_state
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    $winner = rand(1, 2);
    drupal_set_message(
      'The winner between ' . $form_state->getValue('rival_1') .
      ' and ' . $form_state->getValue('rival_2') . ' is: ' .
      $form_state->getValue('rival_' . $winner)
    );
    // TODO: Implement submitForm() method.
  }

  /**
   * {@inheritDoc}
   * @param array $form
   * @param \Drupal\Core\Form\FormStateInterface $form_state
   */
  public function validateForm(array &$form, FormStateInterface $form_state) {
    parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub
    if (empty($form_state->getValue('rival_1'))) {
      $form_state->setErrorByName('rival_1', $this->t('Please specify rival one.'));
    }
  }

}
